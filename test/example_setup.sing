LIB "general.lib";
LIB "linalg.lib";
LIB "solve.lib";
LIB "matrix.lib";
LIB "poly.lib";

ring Q = 0, (x,y,z), dp;

int p;
int d;
int N;
int DIM;
int k=1;
int q = p^k;
poly f;
ideal jf;
ideal bf;

proc setup(poly f, intvec degs){

	
	int d = deg(f);

	/* get derivatives */
	ideal jf = jacob(f);

	/* get monomial base for quotientring qring qr = jf as vector space over rationals */
	ideal bf = kbase(std(jf));

	/* from base get only those which count (deg \in degs) pack them into another ideal; done separately in order to avoid ideal simplification */
	bf = extractIdeal(bf, degs);
	int DIM = size(bf);

	return(list(d,jf,bf,DIM));
}

		p = 7;
		poly f = x^5 + y^5 + x^2*z^3 + y^2*z^3 + (number(p)^k)*z^5;
                list vals = setup(f, intvec(2,7) ); //d*1-3, d*2-3
 		d = vals[1];
		jf = vals[2];
		bf = vals[3];
		DIM = vals[4];
